{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Aleksandar\\\\Desktop\\\\nextProject\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport React, { Fragment } from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  _s();\n\n  console.log(props);\n  useRouter();\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(MeetupDetails, \"CeygcqajjFExIxFEzW4x/gfWEGQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/Aleksandar/Desktop/nextProject/pages/[meetupId]/index.js"],"names":["useRouter","React","Fragment","MeetupDetail","MeetupDetails","props","console","log","meetupData","image","title","address","description"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA;;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAL,EAAAA,SAAS;AACT,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEK,KAAK,CAACG,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CAXD;;GAAMR,a;UAELJ,S;;;KAFKI,a;;AA6DN,eAAeA,aAAf","sourcesContent":["import { useRouter } from 'next/router';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport React, { Fragment } from 'react';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = props => {\r\n\tconsole.log(props);\r\n\tuseRouter();\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://aleksandar123:mzQS3kUTyc7Od7Pu@cluster0.91zfy.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map(meetup => ({\r\n\t\t\tparams: {\r\n\t\t\t\tmeetupId: meetup._id.toString()\r\n\t\t\t}\r\n\t\t}))\r\n\t};\r\n}\r\nexport async function getStaticProps(context) {\r\n\tconst meetupId = context.params.meetupId;\r\n\tconsole.log(meetupId);\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://aleksandar123:mzQS3kUTyc7Od7Pu@cluster0.91zfy.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\r\n\tconst db = client.db();\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst selectedMeetup = await meetupsCollection.findOne({\r\n\t\t_id: ObjectId(meetupId)\r\n\t});\r\n\r\n\tclient.close();\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: {\r\n\t\t\t\tid: selectedMeetup._id.toString(),\r\n\t\t\t\ttitle: selectedMeetup.title,\r\n\t\t\t\taddress: selectedMeetup.address,\r\n\t\t\t\timage: selectedMeetup.image,\r\n\t\t\t\tdescription: selectedMeetup.description\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}